// tonic_hello_client.rs (Client)

// Declare the module generated by tonic-build.
mod helloworld {
    tonic::include_proto!("helloworld");
}

use helloworld::greeter_client::GreeterClient;
use helloworld::HelloRequest;

// The main function for the client.
#[tokio::main]
pub async fn hello_client(url: String) -> Result<(), Box<dyn std::error::Error>> {
    // Connect to the gRPC server.
    // The address should match the server's listening address.

    let mut client = GreeterClient::connect(url).await?;

    // Create a new HelloRequest message.
    let request = tonic::Request::new(HelloRequest {
        name: "Tonic Wee".into(), // Set the name field
    });

    // Send the request to the server and await the response.
    let response = client.say_hello(request).await?;

    // Print the message received in the response.
    println!("RESPONSE={:?}", response.into_inner().message);

    Ok(())
}

#[cfg(test)]
mod tests {
    use super::*;

    #[ignore = "tonic grpc server"]
    #[test]
    fn test_hello_client() {
        hello_client("http://192.168.2.7:50051".to_owned()).unwrap();
    }
}
